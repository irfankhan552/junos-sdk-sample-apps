/*
 * $Id: monitube2-mgmt.cnf.dd,v 1.2.4.2 2009-09-05 03:20:46 ssiano Exp $
 *
 * monitube2-mgmt.cnf.dd - monitube2 mgmt process configuration
 *
 *
 * This code is provided as is by Juniper Networks SDK Developer Support.
 * It is provided with no warranties or guarantees, and Juniper Networks
 * will not provide support or maintenance of this code in any fashion.
 * The code is provided only to help a developer better understand how
 * the SDK can be used.
 *
 * Copyright (c) 2009, Juniper Networks, Inc.
 * All rights reserved.
 */

#include "common_include.dd"
#include "trace_include.dd"

#define DNAME_MONITUBE2_MGMT "monitube2-mgmt"
#define MONITUBE2_MGMT_STRLEN 255

daemon-names monitube2-mgmt;
require-names sync-monitube2;

object juniper-config {

    object services {
        /* Existing object in JUNOS config db schema */
        flag no-struct;
        define SERVICES;
    
        object sync {
            help "SDK Your Net Corp. application information";
            define SYNC;
            flag remove-empty no-struct;
            
            object monitube2 {
            
                help "Configure SYNC MoniTube (2) general options";
                define MONITUBE;
                flag remove-empty no-struct;
                notify monitube2-mgmt;
                action enable-process DNAME_MONITUBE2_MGMT;
                require sync-monitube2;
            
                object rule {
                    help "A rule to be applied to a service set";
                    define RULE;
                    flag remove-empty setof list delta-list;
                    max-elements 1000;
                    
                    attribute rule-name {
                        help "Rule name";
                        flag nokeyword identifier;
                        type ranged string 1 .. MONITUBE2_MGMT_STRLEN;
                    }
                    
                    object from {
                        flag mandatory remove-empty;
                        define RULE_FROM;
                        
                        object destination-addresses {
                            help "The group of destination addresses";
                            define ADDRESSES;
                            
                            flag mandatory;
                            flag homogeneous setof list autosort delta-list;
                            max-elements 100;
                            
                            attribute address {
                                help "An address prefix";
                                flag identifier nokeyword;
                                type ipv4prefix-mandatory;
                            }
                        }
                    }
                    object then {
                        flag mandatory remove-empty;
                        define RULE_THEN;
                        
                        attribute monitoring-rate {
                            help "Media drain rate in bits per second";
                            type ranged uint 10000 .. 1000000000;
                        }
                        attribute mirror-to {
                            help "The destination to mirror to location";
                            type ipv4addr;
                        }
                        must (".. then monitoring-rate" || ".. then mirror-to");
                        must-message "A mirror or monitor must be configured";
                    }
                }

                object traceoptions {
                    help "MoniTube2 trace options";
                    flag remove-empty;
                    require trace sync-monitube2;
                    
                    must(any ".. rule <*>");
                    must-message "A rule must also be configured";
                
                    /* From trace_include.dd */
                    
                    TRACEOPTIONS_FILE;
                    
                    SYSLOG_ATTRIBUTE;
                    
                    /* Types of trace messages generated by monitube2-mgmt */
        
                    object "flag" {
                        help "Tracing flag parameters";
                        flag setof list oneliner;
        
                        attribute flag-name {
                            flag identifier nokeyword;
                            type enum uint {
                                choice normal {
                                    help "Trace normal events";
                                    define MONITUBE_TRACEFLAG_NORMAL;
                                }
                                choice kcom {
                                    help "Trace kcom events";
                                    define MONITUBE_TRACEFLAG_KCOM;
                                }
                                choice connection {
                                    help "Trace connection events";
                                    define MONITUBE_TRACEFLAG_CONNECTION;
                                }
                                choice configuration {
                                    help "Trace configuration events";
                                    define MONITUBE_TRACEFLAG_CONF;
                                }
                                choice ssrb {
                                    help "Trace SSRB change events";
                                    define MONITUBE_TRACEFLAG_SSRB;
                                }
                                choice "all" {
                                    help "Trace everything";
                                    define MONITUBE_TRACEFLAG_ALL;
                                }
                            }
                        }
                    }
                }
            }
        }
        
        object service-set {
            /* Existing object in JUNOS config db schema */
            /* note: this is a 'setof list delta-list' */
            flag no-struct;
            
            object sampling-service {
                flag no-struct;
                notify monitube2-mgmt;
            }

            object extension-service { /* note: this is a 'setof list' */
                flag no-struct delta-list;

                object monitube2-rules {
                    help "MoniTube2 rules to apply in this service set";
                    flag oneset setof list delta-list;
                    notify monitube2-mgmt;
                    
                    attribute rule-name {
                        flag identifier nokeyword;
                        type ranged string 1 .. MONITUBE2_MGMT_STRLEN;
                        path-reference "services sync monitube2 rule";
                        must ("services sync monitube2 rule $$");
                        must-message "Rule name doesn't exist under \\\"services sync monitube2 \\\"";
                    }
                    
                    must (".. .. sampling-service");
                    must-message "MoniTube2 applies only to sampling service sets";
                }
            }
        }
    }
}
